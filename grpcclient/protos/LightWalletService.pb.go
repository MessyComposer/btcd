// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: LightWalletService.proto

package lightwalletrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetChainInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// The signature for the given message
	BestBlockHash string `protobuf:"bytes,1,opt,name=bestBlockHash,proto3" json:"bestBlockHash,omitempty"`
	Height        int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetChainInfoResponse) Reset() {
	*x = GetChainInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainInfoResponse) ProtoMessage() {}

func (x *GetChainInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainInfoResponse.ProtoReflect.Descriptor instead.
func (*GetChainInfoResponse) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{0}
}

func (x *GetChainInfoResponse) GetBestBlockHash() string {
	if x != nil {
		return x.BestBlockHash
	}
	return ""
}

func (x *GetChainInfoResponse) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetBlockHeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash    string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Verbose bool   `protobuf:"varint,2,opt,name=verbose,proto3" json:"verbose,omitempty"`
}

func (x *GetBlockHeaderRequest) Reset() {
	*x = GetBlockHeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockHeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHeaderRequest) ProtoMessage() {}

func (x *GetBlockHeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHeaderRequest.ProtoReflect.Descriptor instead.
func (*GetBlockHeaderRequest) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{1}
}

func (x *GetBlockHeaderRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetBlockHeaderRequest) GetVerbose() bool {
	if x != nil {
		return x.Verbose
	}
	return false
}

type FilterBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []string `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *FilterBlockResponse) Reset() {
	*x = FilterBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterBlockResponse) ProtoMessage() {}

func (x *FilterBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterBlockResponse.ProtoReflect.Descriptor instead.
func (*FilterBlockResponse) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{2}
}

func (x *FilterBlockResponse) GetTransactions() []string {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type BlockFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N     uint32 `protobuf:"varint,1,opt,name=n,proto3" json:"n,omitempty"`
	M     uint64 `protobuf:"varint,2,opt,name=m,proto3" json:"m,omitempty"`
	P     uint32 `protobuf:"varint,3,opt,name=p,proto3" json:"p,omitempty"`
	Bytes string `protobuf:"bytes,4,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *BlockFilter) Reset() {
	*x = BlockFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockFilter) ProtoMessage() {}

func (x *BlockFilter) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockFilter.ProtoReflect.Descriptor instead.
func (*BlockFilter) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{3}
}

func (x *BlockFilter) GetN() uint32 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *BlockFilter) GetM() uint64 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *BlockFilter) GetP() uint32 {
	if x != nil {
		return x.P
	}
	return 0
}

func (x *BlockFilter) GetBytes() string {
	if x != nil {
		return x.Bytes
	}
	return ""
}

type DumpPrivKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptPubKey string `protobuf:"bytes,1,opt,name=scriptPubKey,proto3" json:"scriptPubKey,omitempty"`
}

func (x *DumpPrivKeyRequest) Reset() {
	*x = DumpPrivKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpPrivKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpPrivKeyRequest) ProtoMessage() {}

func (x *DumpPrivKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpPrivKeyRequest.ProtoReflect.Descriptor instead.
func (*DumpPrivKeyRequest) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{4}
}

func (x *DumpPrivKeyRequest) GetScriptPubKey() string {
	if x != nil {
		return x.ScriptPubKey
	}
	return ""
}

type Utxo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vout          uint32 `protobuf:"varint,1,opt,name=vout,proto3" json:"vout,omitempty"`
	Txid          string `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
	Value         int64  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	ScriptPubKey  string `protobuf:"bytes,4,opt,name=scriptPubKey,proto3" json:"scriptPubKey,omitempty"`
	Confirmations int64  `protobuf:"varint,5,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
}

func (x *Utxo) Reset() {
	*x = Utxo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Utxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Utxo) ProtoMessage() {}

func (x *Utxo) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Utxo.ProtoReflect.Descriptor instead.
func (*Utxo) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{5}
}

func (x *Utxo) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *Utxo) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Utxo) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Utxo) GetScriptPubKey() string {
	if x != nil {
		return x.ScriptPubKey
	}
	return ""
}

func (x *Utxo) GetConfirmations() int64 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

type ListUtxoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utxos []*Utxo `protobuf:"bytes,1,rep,name=utxos,proto3" json:"utxos,omitempty"`
}

func (x *ListUtxoResult) Reset() {
	*x = ListUtxoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUtxoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUtxoResult) ProtoMessage() {}

func (x *ListUtxoResult) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUtxoResult.ProtoReflect.Descriptor instead.
func (*ListUtxoResult) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{6}
}

func (x *ListUtxoResult) GetUtxos() []*Utxo {
	if x != nil {
		return x.Utxos
	}
	return nil
}

type GetLastAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsChange bool `protobuf:"varint,1,opt,name=isChange,proto3" json:"isChange,omitempty"`
}

func (x *GetLastAddressRequest) Reset() {
	*x = GetLastAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastAddressRequest) ProtoMessage() {}

func (x *GetLastAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastAddressRequest.ProtoReflect.Descriptor instead.
func (*GetLastAddressRequest) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{7}
}

func (x *GetLastAddressRequest) GetIsChange() bool {
	if x != nil {
		return x.IsChange
	}
	return false
}

type GetLastAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetLastAddressResponse) Reset() {
	*x = GetLastAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastAddressResponse) ProtoMessage() {}

func (x *GetLastAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastAddressResponse.ProtoReflect.Descriptor instead.
func (*GetLastAddressResponse) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{8}
}

func (x *GetLastAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ListUtxosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinConf   int32    `protobuf:"varint,1,opt,name=minConf,proto3" json:"minConf,omitempty"`
	MaxConf   int32    `protobuf:"varint,2,opt,name=maxConf,proto3" json:"maxConf,omitempty"`
	Addresses []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *ListUtxosRequest) Reset() {
	*x = ListUtxosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUtxosRequest) ProtoMessage() {}

func (x *ListUtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUtxosRequest.ProtoReflect.Descriptor instead.
func (*ListUtxosRequest) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{9}
}

func (x *ListUtxosRequest) GetMinConf() int32 {
	if x != nil {
		return x.MinConf
	}
	return 0
}

func (x *ListUtxosRequest) GetMaxConf() int32 {
	if x != nil {
		return x.MaxConf
	}
	return 0
}

func (x *ListUtxosRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type GenerateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumBlocks uint32 `protobuf:"varint,1,opt,name=numBlocks,proto3" json:"numBlocks,omitempty"`
}

func (x *GenerateRequest) Reset() {
	*x = GenerateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRequest) ProtoMessage() {}

func (x *GenerateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRequest.ProtoReflect.Descriptor instead.
func (*GenerateRequest) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{10}
}

func (x *GenerateRequest) GetNumBlocks() uint32 {
	if x != nil {
		return x.NumBlocks
	}
	return 0
}

type GenerateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash []string `protobuf:"bytes,1,rep,name=blockHash,proto3" json:"blockHash,omitempty"`
}

func (x *GenerateResponse) Reset() {
	*x = GenerateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateResponse) ProtoMessage() {}

func (x *GenerateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateResponse.ProtoReflect.Descriptor instead.
func (*GenerateResponse) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{11}
}

func (x *GenerateResponse) GetBlockHash() []string {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type GetBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block []byte `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *GetBlockResponse) Reset() {
	*x = GetBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockResponse) ProtoMessage() {}

func (x *GetBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockResponse.ProtoReflect.Descriptor instead.
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{12}
}

func (x *GetBlockResponse) GetBlock() []byte {
	if x != nil {
		return x.Block
	}
	return nil
}

type GetConfirmedBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Confs int32 `protobuf:"varint,1,opt,name=confs,proto3" json:"confs,omitempty"`
}

func (x *GetConfirmedBalanceRequest) Reset() {
	*x = GetConfirmedBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfirmedBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfirmedBalanceRequest) ProtoMessage() {}

func (x *GetConfirmedBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfirmedBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetConfirmedBalanceRequest) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{13}
}

func (x *GetConfirmedBalanceRequest) GetConfs() int32 {
	if x != nil {
		return x.Confs
	}
	return 0
}

type GetConfirmedBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetConfirmedBalanceResponse) Reset() {
	*x = GetConfirmedBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfirmedBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfirmedBalanceResponse) ProtoMessage() {}

func (x *GetConfirmedBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfirmedBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetConfirmedBalanceResponse) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{14}
}

func (x *GetConfirmedBalanceResponse) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type EstimateNetworkFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks uint64 `protobuf:"varint,1,opt,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *EstimateNetworkFeeRequest) Reset() {
	*x = EstimateNetworkFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateNetworkFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateNetworkFeeRequest) ProtoMessage() {}

func (x *EstimateNetworkFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateNetworkFeeRequest.ProtoReflect.Descriptor instead.
func (*EstimateNetworkFeeRequest) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{15}
}

func (x *EstimateNetworkFeeRequest) GetBlocks() uint64 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

type EstimateNetworkFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fee int64 `protobuf:"varint,1,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *EstimateNetworkFeeResponse) Reset() {
	*x = EstimateNetworkFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateNetworkFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateNetworkFeeResponse) ProtoMessage() {}

func (x *EstimateNetworkFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateNetworkFeeResponse.ProtoReflect.Descriptor instead.
func (*EstimateNetworkFeeResponse) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{16}
}

func (x *EstimateNetworkFeeResponse) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type GetRawTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHex string `protobuf:"bytes,1,opt,name=transactionHex,proto3" json:"transactionHex,omitempty"`
	BlockHash      string `protobuf:"bytes,2,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	BlockHeight    uint32 `protobuf:"varint,3,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	TxIndex        uint32 `protobuf:"varint,4,opt,name=txIndex,proto3" json:"txIndex,omitempty"`
}

func (x *GetRawTransactionResponse) Reset() {
	*x = GetRawTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRawTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawTransactionResponse) ProtoMessage() {}

func (x *GetRawTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetRawTransactionResponse) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{17}
}

func (x *GetRawTransactionResponse) GetTransactionHex() string {
	if x != nil {
		return x.TransactionHex
	}
	return ""
}

func (x *GetRawTransactionResponse) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *GetRawTransactionResponse) GetBlockHeight() uint32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *GetRawTransactionResponse) GetTxIndex() uint32 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

type GetRawTxByIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNum int64  `protobuf:"varint,1,opt,name=blockNum,proto3" json:"blockNum,omitempty"`
	TxIndex  uint32 `protobuf:"varint,2,opt,name=txIndex,proto3" json:"txIndex,omitempty"`
}

func (x *GetRawTxByIndexRequest) Reset() {
	*x = GetRawTxByIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRawTxByIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawTxByIndexRequest) ProtoMessage() {}

func (x *GetRawTxByIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawTxByIndexRequest.ProtoReflect.Descriptor instead.
func (*GetRawTxByIndexRequest) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{18}
}

func (x *GetRawTxByIndexRequest) GetBlockNum() int64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *GetRawTxByIndexRequest) GetTxIndex() uint32 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

type GetRawTxByIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHex string `protobuf:"bytes,1,opt,name=txHex,proto3" json:"txHex,omitempty"`
}

func (x *GetRawTxByIndexResponse) Reset() {
	*x = GetRawTxByIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRawTxByIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawTxByIndexResponse) ProtoMessage() {}

func (x *GetRawTxByIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawTxByIndexResponse.ProtoReflect.Descriptor instead.
func (*GetRawTxByIndexResponse) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{19}
}

func (x *GetRawTxByIndexResponse) GetTxHex() string {
	if x != nil {
		return x.TxHex
	}
	return ""
}

type LoadCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartHeight uint32 `protobuf:"varint,1,opt,name=startHeight,proto3" json:"startHeight,omitempty"`
}

func (x *LoadCacheRequest) Reset() {
	*x = LoadCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadCacheRequest) ProtoMessage() {}

func (x *LoadCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadCacheRequest.ProtoReflect.Descriptor instead.
func (*LoadCacheRequest) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{20}
}

func (x *LoadCacheRequest) GetStartHeight() uint32 {
	if x != nil {
		return x.StartHeight
	}
	return 0
}

type LoadCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Loaded bool `protobuf:"varint,1,opt,name=loaded,proto3" json:"loaded,omitempty"`
}

func (x *LoadCacheResponse) Reset() {
	*x = LoadCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LightWalletService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadCacheResponse) ProtoMessage() {}

func (x *LoadCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_LightWalletService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadCacheResponse.ProtoReflect.Descriptor instead.
func (*LoadCacheResponse) Descriptor() ([]byte, []int) {
	return file_LightWalletService_proto_rawDescGZIP(), []int{21}
}

func (x *LoadCacheResponse) GetLoaded() bool {
	if x != nil {
		return x.Loaded
	}
	return false
}

var File_LightWalletService_proto protoreflect.FileDescriptor

var file_LightWalletService_proto_rawDesc = []byte{
	0x0a, 0x18, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x45,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x62, 0x6f, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x4d, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x6e, 0x12, 0x0c, 0x0a,
	0x01, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x01, 0x6d, 0x12, 0x0c, 0x0a, 0x01, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22,
	0x38, 0x0a, 0x12, 0x44, 0x75, 0x6d, 0x70, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x22, 0x8e, 0x01, 0x0a, 0x04, 0x55, 0x74,
	0x78, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x75,
	0x62, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3c, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x05,
	0x75, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x74, 0x78,
	0x6f, 0x52, 0x05, 0x75, 0x74, 0x78, 0x6f, 0x73, 0x22, 0x33, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x32, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x64, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x75,
	0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e,
	0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x30, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x32, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x22, 0x35, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x33, 0x0a, 0x19, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x22, 0x2e, 0x0a, 0x1a, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x78, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x54, 0x78,
	0x42, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x78, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x2f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x54, 0x78,
	0x42, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x78, 0x48, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x78, 0x48, 0x65, 0x78, 0x22, 0x34, 0x0a, 0x10, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x2b, 0x0a, 0x11, 0x4c,
	0x6f, 0x61, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x32, 0x8f, 0x0e, 0x0a, 0x12, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x15, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x2e, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x1a, 0x19, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x47, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x2e, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x20, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x1a, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x78, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x12, 0x4f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x12, 0x19, 0x2e, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x1b, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x50, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x1a,
	0x23, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x1a, 0x1b, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3b,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x12, 0x18, 0x2e, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x75, 0x74, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x15, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x12, 0x54, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x78, 0x49, 0x44, 0x1a, 0x29, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x62, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x54, 0x78, 0x42, 0x79, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x26, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x54, 0x78, 0x42, 0x79,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x61, 0x77, 0x54, 0x78, 0x42, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x74,
	0x78, 0x6f, 0x73, 0x12, 0x20, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4d, 0x0a, 0x0b, 0x44, 0x75, 0x6d, 0x70, 0x50, 0x72, 0x69,
	0x76, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x75, 0x6d, 0x70, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x78, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x61, 0x77, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x78, 0x45,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x1a, 0x14, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x78, 0x49, 0x44, 0x12, 0x6e, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65,
	0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x14, 0x4c,
	0x6f, 0x61, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x12, 0x20, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x14, 0x46, 0x72, 0x65, 0x65,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x15, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6b,
	0x0a, 0x12, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x46, 0x65, 0x65, 0x12, 0x29, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x4c,
	0x6f, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x75, 0x74,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x15, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x0e,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18,
	0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x15, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a,
	0x29, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x12, 0x5a, 0x10, 0x2e, 0x2f,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_LightWalletService_proto_rawDescOnce sync.Once
	file_LightWalletService_proto_rawDescData = file_LightWalletService_proto_rawDesc
)

func file_LightWalletService_proto_rawDescGZIP() []byte {
	file_LightWalletService_proto_rawDescOnce.Do(func() {
		file_LightWalletService_proto_rawDescData = protoimpl.X.CompressGZIP(file_LightWalletService_proto_rawDescData)
	})
	return file_LightWalletService_proto_rawDescData
}

var file_LightWalletService_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_LightWalletService_proto_goTypes = []interface{}{
	(*GetChainInfoResponse)(nil),        // 0: lightwalletrpc.GetChainInfoResponse
	(*GetBlockHeaderRequest)(nil),       // 1: lightwalletrpc.GetBlockHeaderRequest
	(*FilterBlockResponse)(nil),         // 2: lightwalletrpc.FilterBlockResponse
	(*BlockFilter)(nil),                 // 3: lightwalletrpc.BlockFilter
	(*DumpPrivKeyRequest)(nil),          // 4: lightwalletrpc.DumpPrivKeyRequest
	(*Utxo)(nil),                        // 5: lightwalletrpc.Utxo
	(*ListUtxoResult)(nil),              // 6: lightwalletrpc.ListUtxoResult
	(*GetLastAddressRequest)(nil),       // 7: lightwalletrpc.GetLastAddressRequest
	(*GetLastAddressResponse)(nil),      // 8: lightwalletrpc.GetLastAddressResponse
	(*ListUtxosRequest)(nil),            // 9: lightwalletrpc.ListUtxosRequest
	(*GenerateRequest)(nil),             // 10: lightwalletrpc.GenerateRequest
	(*GenerateResponse)(nil),            // 11: lightwalletrpc.GenerateResponse
	(*GetBlockResponse)(nil),            // 12: lightwalletrpc.GetBlockResponse
	(*GetConfirmedBalanceRequest)(nil),  // 13: lightwalletrpc.GetConfirmedBalanceRequest
	(*GetConfirmedBalanceResponse)(nil), // 14: lightwalletrpc.GetConfirmedBalanceResponse
	(*EstimateNetworkFeeRequest)(nil),   // 15: lightwalletrpc.EstimateNetworkFeeRequest
	(*EstimateNetworkFeeResponse)(nil),  // 16: lightwalletrpc.EstimateNetworkFeeResponse
	(*GetRawTransactionResponse)(nil),   // 17: lightwalletrpc.GetRawTransactionResponse
	(*GetRawTxByIndexRequest)(nil),      // 18: lightwalletrpc.GetRawTxByIndexRequest
	(*GetRawTxByIndexResponse)(nil),     // 19: lightwalletrpc.GetRawTxByIndexResponse
	(*LoadCacheRequest)(nil),            // 20: lightwalletrpc.LoadCacheRequest
	(*LoadCacheResponse)(nil),           // 21: lightwalletrpc.LoadCacheResponse
	(*Empty)(nil),                       // 22: lightwalletrpc.Empty
	(*Height)(nil),                      // 23: lightwalletrpc.Height
	(*BlockHash)(nil),                   // 24: lightwalletrpc.BlockHash
	(*Outpoint)(nil),                    // 25: lightwalletrpc.Outpoint
	(*TxID)(nil),                        // 26: lightwalletrpc.TxID
	(*HexEncoded)(nil),                  // 27: lightwalletrpc.HexEncoded
	(*BlockHeader)(nil),                 // 28: lightwalletrpc.BlockHeader
	(*TxOut)(nil),                       // 29: lightwalletrpc.TxOut
}
var file_LightWalletService_proto_depIdxs = []int32{
	5,  // 0: lightwalletrpc.ListUtxoResult.utxos:type_name -> lightwalletrpc.Utxo
	22, // 1: lightwalletrpc.LightWalletService.GetChainInfo:input_type -> lightwalletrpc.Empty
	23, // 2: lightwalletrpc.LightWalletService.GetBlockHash:input_type -> lightwalletrpc.Height
	24, // 3: lightwalletrpc.LightWalletService.GetBlock:input_type -> lightwalletrpc.BlockHash
	24, // 4: lightwalletrpc.LightWalletService.GetBlockHeader:input_type -> lightwalletrpc.BlockHash
	24, // 5: lightwalletrpc.LightWalletService.GetBlockHeaderVerbose:input_type -> lightwalletrpc.BlockHash
	24, // 6: lightwalletrpc.LightWalletService.GetFilterBlock:input_type -> lightwalletrpc.BlockHash
	24, // 7: lightwalletrpc.LightWalletService.GetBlockFilter:input_type -> lightwalletrpc.BlockHash
	25, // 8: lightwalletrpc.LightWalletService.GetTxOut:input_type -> lightwalletrpc.Outpoint
	26, // 9: lightwalletrpc.LightWalletService.GetRawTransaction:input_type -> lightwalletrpc.TxID
	18, // 10: lightwalletrpc.LightWalletService.GetRawTxByIndex:input_type -> lightwalletrpc.GetRawTxByIndexRequest
	7,  // 11: lightwalletrpc.LightWalletService.GetLastAddress:input_type -> lightwalletrpc.GetLastAddressRequest
	9,  // 12: lightwalletrpc.LightWalletService.ListUtxos:input_type -> lightwalletrpc.ListUtxosRequest
	4,  // 13: lightwalletrpc.LightWalletService.DumpPrivKey:input_type -> lightwalletrpc.DumpPrivKeyRequest
	27, // 14: lightwalletrpc.LightWalletService.SendRawTransaction:input_type -> lightwalletrpc.HexEncoded
	13, // 15: lightwalletrpc.LightWalletService.GetConfirmedBalance:input_type -> lightwalletrpc.GetConfirmedBalanceRequest
	10, // 16: lightwalletrpc.LightWalletService.Generate:input_type -> lightwalletrpc.GenerateRequest
	20, // 17: lightwalletrpc.LightWalletService.LoadSecondLayerCache:input_type -> lightwalletrpc.LoadCacheRequest
	22, // 18: lightwalletrpc.LightWalletService.FreeSecondLayerCache:input_type -> lightwalletrpc.Empty
	15, // 19: lightwalletrpc.LightWalletService.EstimateNetworkFee:input_type -> lightwalletrpc.EstimateNetworkFeeRequest
	25, // 20: lightwalletrpc.LightWalletService.LockOutpoint:input_type -> lightwalletrpc.Outpoint
	25, // 21: lightwalletrpc.LightWalletService.UnlockOutpoint:input_type -> lightwalletrpc.Outpoint
	25, // 22: lightwalletrpc.LightWalletService.GetSpendingDetails:input_type -> lightwalletrpc.Outpoint
	0,  // 23: lightwalletrpc.LightWalletService.GetChainInfo:output_type -> lightwalletrpc.GetChainInfoResponse
	24, // 24: lightwalletrpc.LightWalletService.GetBlockHash:output_type -> lightwalletrpc.BlockHash
	12, // 25: lightwalletrpc.LightWalletService.GetBlock:output_type -> lightwalletrpc.GetBlockResponse
	27, // 26: lightwalletrpc.LightWalletService.GetBlockHeader:output_type -> lightwalletrpc.HexEncoded
	28, // 27: lightwalletrpc.LightWalletService.GetBlockHeaderVerbose:output_type -> lightwalletrpc.BlockHeader
	2,  // 28: lightwalletrpc.LightWalletService.GetFilterBlock:output_type -> lightwalletrpc.FilterBlockResponse
	3,  // 29: lightwalletrpc.LightWalletService.GetBlockFilter:output_type -> lightwalletrpc.BlockFilter
	29, // 30: lightwalletrpc.LightWalletService.GetTxOut:output_type -> lightwalletrpc.TxOut
	17, // 31: lightwalletrpc.LightWalletService.GetRawTransaction:output_type -> lightwalletrpc.GetRawTransactionResponse
	19, // 32: lightwalletrpc.LightWalletService.GetRawTxByIndex:output_type -> lightwalletrpc.GetRawTxByIndexResponse
	8,  // 33: lightwalletrpc.LightWalletService.GetLastAddress:output_type -> lightwalletrpc.GetLastAddressResponse
	6,  // 34: lightwalletrpc.LightWalletService.ListUtxos:output_type -> lightwalletrpc.ListUtxoResult
	27, // 35: lightwalletrpc.LightWalletService.DumpPrivKey:output_type -> lightwalletrpc.HexEncoded
	26, // 36: lightwalletrpc.LightWalletService.SendRawTransaction:output_type -> lightwalletrpc.TxID
	14, // 37: lightwalletrpc.LightWalletService.GetConfirmedBalance:output_type -> lightwalletrpc.GetConfirmedBalanceResponse
	11, // 38: lightwalletrpc.LightWalletService.Generate:output_type -> lightwalletrpc.GenerateResponse
	21, // 39: lightwalletrpc.LightWalletService.LoadSecondLayerCache:output_type -> lightwalletrpc.LoadCacheResponse
	22, // 40: lightwalletrpc.LightWalletService.FreeSecondLayerCache:output_type -> lightwalletrpc.Empty
	16, // 41: lightwalletrpc.LightWalletService.EstimateNetworkFee:output_type -> lightwalletrpc.EstimateNetworkFeeResponse
	22, // 42: lightwalletrpc.LightWalletService.LockOutpoint:output_type -> lightwalletrpc.Empty
	22, // 43: lightwalletrpc.LightWalletService.UnlockOutpoint:output_type -> lightwalletrpc.Empty
	17, // 44: lightwalletrpc.LightWalletService.GetSpendingDetails:output_type -> lightwalletrpc.GetRawTransactionResponse
	23, // [23:45] is the sub-list for method output_type
	1,  // [1:23] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_LightWalletService_proto_init() }
func file_LightWalletService_proto_init() {
	if File_LightWalletService_proto != nil {
		return
	}
	file_Common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_LightWalletService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockHeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpPrivKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Utxo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUtxoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUtxosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfirmedBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfirmedBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateNetworkFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateNetworkFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRawTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRawTxByIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRawTxByIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LightWalletService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_LightWalletService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_LightWalletService_proto_goTypes,
		DependencyIndexes: file_LightWalletService_proto_depIdxs,
		MessageInfos:      file_LightWalletService_proto_msgTypes,
	}.Build()
	File_LightWalletService_proto = out.File
	file_LightWalletService_proto_rawDesc = nil
	file_LightWalletService_proto_goTypes = nil
	file_LightWalletService_proto_depIdxs = nil
}
