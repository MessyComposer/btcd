// Code generated by protoc-gen-go. DO NOT EDIT.
// source: LightWalletService.proto

package lightwalletrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetChainInfoResponse struct {
	/// The signature for the given message
	BestBlockHash        string   `protobuf:"bytes,1,opt,name=bestBlockHash,proto3" json:"bestBlockHash,omitempty"`
	Height               int32    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChainInfoResponse) Reset()         { *m = GetChainInfoResponse{} }
func (m *GetChainInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetChainInfoResponse) ProtoMessage()    {}
func (*GetChainInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{0}
}

func (m *GetChainInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChainInfoResponse.Unmarshal(m, b)
}
func (m *GetChainInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChainInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetChainInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChainInfoResponse.Merge(m, src)
}
func (m *GetChainInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetChainInfoResponse.Size(m)
}
func (m *GetChainInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChainInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetChainInfoResponse proto.InternalMessageInfo

func (m *GetChainInfoResponse) GetBestBlockHash() string {
	if m != nil {
		return m.BestBlockHash
	}
	return ""
}

func (m *GetChainInfoResponse) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type GetBlockHeaderRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Verbose              bool     `protobuf:"varint,2,opt,name=verbose,proto3" json:"verbose,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockHeaderRequest) Reset()         { *m = GetBlockHeaderRequest{} }
func (m *GetBlockHeaderRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockHeaderRequest) ProtoMessage()    {}
func (*GetBlockHeaderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{1}
}

func (m *GetBlockHeaderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockHeaderRequest.Unmarshal(m, b)
}
func (m *GetBlockHeaderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockHeaderRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockHeaderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockHeaderRequest.Merge(m, src)
}
func (m *GetBlockHeaderRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockHeaderRequest.Size(m)
}
func (m *GetBlockHeaderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockHeaderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockHeaderRequest proto.InternalMessageInfo

func (m *GetBlockHeaderRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *GetBlockHeaderRequest) GetVerbose() bool {
	if m != nil {
		return m.Verbose
	}
	return false
}

type FilterBlockResponse struct {
	Transactions         []string `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterBlockResponse) Reset()         { *m = FilterBlockResponse{} }
func (m *FilterBlockResponse) String() string { return proto.CompactTextString(m) }
func (*FilterBlockResponse) ProtoMessage()    {}
func (*FilterBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{2}
}

func (m *FilterBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterBlockResponse.Unmarshal(m, b)
}
func (m *FilterBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterBlockResponse.Marshal(b, m, deterministic)
}
func (m *FilterBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterBlockResponse.Merge(m, src)
}
func (m *FilterBlockResponse) XXX_Size() int {
	return xxx_messageInfo_FilterBlockResponse.Size(m)
}
func (m *FilterBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FilterBlockResponse proto.InternalMessageInfo

func (m *FilterBlockResponse) GetTransactions() []string {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type BlockFilter struct {
	N                    uint32   `protobuf:"varint,1,opt,name=n,proto3" json:"n,omitempty"`
	M                    uint64   `protobuf:"varint,2,opt,name=m,proto3" json:"m,omitempty"`
	P                    uint32   `protobuf:"varint,3,opt,name=p,proto3" json:"p,omitempty"`
	Bytes                string   `protobuf:"bytes,4,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockFilter) Reset()         { *m = BlockFilter{} }
func (m *BlockFilter) String() string { return proto.CompactTextString(m) }
func (*BlockFilter) ProtoMessage()    {}
func (*BlockFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{3}
}

func (m *BlockFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockFilter.Unmarshal(m, b)
}
func (m *BlockFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockFilter.Marshal(b, m, deterministic)
}
func (m *BlockFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockFilter.Merge(m, src)
}
func (m *BlockFilter) XXX_Size() int {
	return xxx_messageInfo_BlockFilter.Size(m)
}
func (m *BlockFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockFilter.DiscardUnknown(m)
}

var xxx_messageInfo_BlockFilter proto.InternalMessageInfo

func (m *BlockFilter) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *BlockFilter) GetM() uint64 {
	if m != nil {
		return m.M
	}
	return 0
}

func (m *BlockFilter) GetP() uint32 {
	if m != nil {
		return m.P
	}
	return 0
}

func (m *BlockFilter) GetBytes() string {
	if m != nil {
		return m.Bytes
	}
	return ""
}

type DumpPrivKeyRequest struct {
	ScriptPubKey         string   `protobuf:"bytes,1,opt,name=scriptPubKey,proto3" json:"scriptPubKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpPrivKeyRequest) Reset()         { *m = DumpPrivKeyRequest{} }
func (m *DumpPrivKeyRequest) String() string { return proto.CompactTextString(m) }
func (*DumpPrivKeyRequest) ProtoMessage()    {}
func (*DumpPrivKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{4}
}

func (m *DumpPrivKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpPrivKeyRequest.Unmarshal(m, b)
}
func (m *DumpPrivKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpPrivKeyRequest.Marshal(b, m, deterministic)
}
func (m *DumpPrivKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpPrivKeyRequest.Merge(m, src)
}
func (m *DumpPrivKeyRequest) XXX_Size() int {
	return xxx_messageInfo_DumpPrivKeyRequest.Size(m)
}
func (m *DumpPrivKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpPrivKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DumpPrivKeyRequest proto.InternalMessageInfo

func (m *DumpPrivKeyRequest) GetScriptPubKey() string {
	if m != nil {
		return m.ScriptPubKey
	}
	return ""
}

type Utxo struct {
	Vout                 uint32   `protobuf:"varint,1,opt,name=vout,proto3" json:"vout,omitempty"`
	Txid                 string   `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
	Value                int64    `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	ScriptPubKey         string   `protobuf:"bytes,4,opt,name=scriptPubKey,proto3" json:"scriptPubKey,omitempty"`
	Confirmations        int64    `protobuf:"varint,5,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Utxo) Reset()         { *m = Utxo{} }
func (m *Utxo) String() string { return proto.CompactTextString(m) }
func (*Utxo) ProtoMessage()    {}
func (*Utxo) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{5}
}

func (m *Utxo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Utxo.Unmarshal(m, b)
}
func (m *Utxo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Utxo.Marshal(b, m, deterministic)
}
func (m *Utxo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Utxo.Merge(m, src)
}
func (m *Utxo) XXX_Size() int {
	return xxx_messageInfo_Utxo.Size(m)
}
func (m *Utxo) XXX_DiscardUnknown() {
	xxx_messageInfo_Utxo.DiscardUnknown(m)
}

var xxx_messageInfo_Utxo proto.InternalMessageInfo

func (m *Utxo) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *Utxo) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *Utxo) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Utxo) GetScriptPubKey() string {
	if m != nil {
		return m.ScriptPubKey
	}
	return ""
}

func (m *Utxo) GetConfirmations() int64 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

type ListUtxoResult struct {
	Utxos                []*Utxo  `protobuf:"bytes,1,rep,name=utxos,proto3" json:"utxos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUtxoResult) Reset()         { *m = ListUtxoResult{} }
func (m *ListUtxoResult) String() string { return proto.CompactTextString(m) }
func (*ListUtxoResult) ProtoMessage()    {}
func (*ListUtxoResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{6}
}

func (m *ListUtxoResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUtxoResult.Unmarshal(m, b)
}
func (m *ListUtxoResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUtxoResult.Marshal(b, m, deterministic)
}
func (m *ListUtxoResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUtxoResult.Merge(m, src)
}
func (m *ListUtxoResult) XXX_Size() int {
	return xxx_messageInfo_ListUtxoResult.Size(m)
}
func (m *ListUtxoResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUtxoResult.DiscardUnknown(m)
}

var xxx_messageInfo_ListUtxoResult proto.InternalMessageInfo

func (m *ListUtxoResult) GetUtxos() []*Utxo {
	if m != nil {
		return m.Utxos
	}
	return nil
}

type GetLastAddressRequest struct {
	IsChange             bool     `protobuf:"varint,1,opt,name=isChange,proto3" json:"isChange,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLastAddressRequest) Reset()         { *m = GetLastAddressRequest{} }
func (m *GetLastAddressRequest) String() string { return proto.CompactTextString(m) }
func (*GetLastAddressRequest) ProtoMessage()    {}
func (*GetLastAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{7}
}

func (m *GetLastAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastAddressRequest.Unmarshal(m, b)
}
func (m *GetLastAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastAddressRequest.Marshal(b, m, deterministic)
}
func (m *GetLastAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastAddressRequest.Merge(m, src)
}
func (m *GetLastAddressRequest) XXX_Size() int {
	return xxx_messageInfo_GetLastAddressRequest.Size(m)
}
func (m *GetLastAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastAddressRequest proto.InternalMessageInfo

func (m *GetLastAddressRequest) GetIsChange() bool {
	if m != nil {
		return m.IsChange
	}
	return false
}

type GetLastAddressResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLastAddressResponse) Reset()         { *m = GetLastAddressResponse{} }
func (m *GetLastAddressResponse) String() string { return proto.CompactTextString(m) }
func (*GetLastAddressResponse) ProtoMessage()    {}
func (*GetLastAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{8}
}

func (m *GetLastAddressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastAddressResponse.Unmarshal(m, b)
}
func (m *GetLastAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastAddressResponse.Marshal(b, m, deterministic)
}
func (m *GetLastAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastAddressResponse.Merge(m, src)
}
func (m *GetLastAddressResponse) XXX_Size() int {
	return xxx_messageInfo_GetLastAddressResponse.Size(m)
}
func (m *GetLastAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastAddressResponse proto.InternalMessageInfo

func (m *GetLastAddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ListUtxosRequest struct {
	MinConf              int32    `protobuf:"varint,1,opt,name=minConf,proto3" json:"minConf,omitempty"`
	MaxConf              int32    `protobuf:"varint,2,opt,name=maxConf,proto3" json:"maxConf,omitempty"`
	Addresses            []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUtxosRequest) Reset()         { *m = ListUtxosRequest{} }
func (m *ListUtxosRequest) String() string { return proto.CompactTextString(m) }
func (*ListUtxosRequest) ProtoMessage()    {}
func (*ListUtxosRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{9}
}

func (m *ListUtxosRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUtxosRequest.Unmarshal(m, b)
}
func (m *ListUtxosRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUtxosRequest.Marshal(b, m, deterministic)
}
func (m *ListUtxosRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUtxosRequest.Merge(m, src)
}
func (m *ListUtxosRequest) XXX_Size() int {
	return xxx_messageInfo_ListUtxosRequest.Size(m)
}
func (m *ListUtxosRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUtxosRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUtxosRequest proto.InternalMessageInfo

func (m *ListUtxosRequest) GetMinConf() int32 {
	if m != nil {
		return m.MinConf
	}
	return 0
}

func (m *ListUtxosRequest) GetMaxConf() int32 {
	if m != nil {
		return m.MaxConf
	}
	return 0
}

func (m *ListUtxosRequest) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type GenerateRequest struct {
	NumBlocks            uint32   `protobuf:"varint,1,opt,name=numBlocks,proto3" json:"numBlocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateRequest) Reset()         { *m = GenerateRequest{} }
func (m *GenerateRequest) String() string { return proto.CompactTextString(m) }
func (*GenerateRequest) ProtoMessage()    {}
func (*GenerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{10}
}

func (m *GenerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateRequest.Unmarshal(m, b)
}
func (m *GenerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateRequest.Marshal(b, m, deterministic)
}
func (m *GenerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateRequest.Merge(m, src)
}
func (m *GenerateRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateRequest.Size(m)
}
func (m *GenerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateRequest proto.InternalMessageInfo

func (m *GenerateRequest) GetNumBlocks() uint32 {
	if m != nil {
		return m.NumBlocks
	}
	return 0
}

type GenerateResponse struct {
	BlockHash            []string `protobuf:"bytes,1,rep,name=blockHash,proto3" json:"blockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateResponse) Reset()         { *m = GenerateResponse{} }
func (m *GenerateResponse) String() string { return proto.CompactTextString(m) }
func (*GenerateResponse) ProtoMessage()    {}
func (*GenerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{11}
}

func (m *GenerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateResponse.Unmarshal(m, b)
}
func (m *GenerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateResponse.Marshal(b, m, deterministic)
}
func (m *GenerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateResponse.Merge(m, src)
}
func (m *GenerateResponse) XXX_Size() int {
	return xxx_messageInfo_GenerateResponse.Size(m)
}
func (m *GenerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateResponse proto.InternalMessageInfo

func (m *GenerateResponse) GetBlockHash() []string {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

type GetBlockResponse struct {
	BlockHeader          string   `protobuf:"bytes,1,opt,name=blockHeader,proto3" json:"blockHeader,omitempty"`
	Transactions         []string `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockResponse) Reset()         { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()    {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{12}
}

func (m *GetBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockResponse.Unmarshal(m, b)
}
func (m *GetBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockResponse.Marshal(b, m, deterministic)
}
func (m *GetBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockResponse.Merge(m, src)
}
func (m *GetBlockResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockResponse.Size(m)
}
func (m *GetBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockResponse proto.InternalMessageInfo

func (m *GetBlockResponse) GetBlockHeader() string {
	if m != nil {
		return m.BlockHeader
	}
	return ""
}

func (m *GetBlockResponse) GetTransactions() []string {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type GetConfirmedBalanceRequest struct {
	Confs                int32    `protobuf:"varint,1,opt,name=confs,proto3" json:"confs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfirmedBalanceRequest) Reset()         { *m = GetConfirmedBalanceRequest{} }
func (m *GetConfirmedBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetConfirmedBalanceRequest) ProtoMessage()    {}
func (*GetConfirmedBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{13}
}

func (m *GetConfirmedBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfirmedBalanceRequest.Unmarshal(m, b)
}
func (m *GetConfirmedBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfirmedBalanceRequest.Marshal(b, m, deterministic)
}
func (m *GetConfirmedBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfirmedBalanceRequest.Merge(m, src)
}
func (m *GetConfirmedBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetConfirmedBalanceRequest.Size(m)
}
func (m *GetConfirmedBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfirmedBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfirmedBalanceRequest proto.InternalMessageInfo

func (m *GetConfirmedBalanceRequest) GetConfs() int32 {
	if m != nil {
		return m.Confs
	}
	return 0
}

type GetConfirmedBalanceResponse struct {
	Amount               int64    `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfirmedBalanceResponse) Reset()         { *m = GetConfirmedBalanceResponse{} }
func (m *GetConfirmedBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*GetConfirmedBalanceResponse) ProtoMessage()    {}
func (*GetConfirmedBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{14}
}

func (m *GetConfirmedBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfirmedBalanceResponse.Unmarshal(m, b)
}
func (m *GetConfirmedBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfirmedBalanceResponse.Marshal(b, m, deterministic)
}
func (m *GetConfirmedBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfirmedBalanceResponse.Merge(m, src)
}
func (m *GetConfirmedBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_GetConfirmedBalanceResponse.Size(m)
}
func (m *GetConfirmedBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfirmedBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfirmedBalanceResponse proto.InternalMessageInfo

func (m *GetConfirmedBalanceResponse) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type GetRawTransactionResponse struct {
	TransactionHex       string   `protobuf:"bytes,1,opt,name=transactionHex,proto3" json:"transactionHex,omitempty"`
	BlockHash            string   `protobuf:"bytes,2,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	BlockHeight          uint32   `protobuf:"varint,3,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	TxIndex              uint32   `protobuf:"varint,4,opt,name=txIndex,proto3" json:"txIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRawTransactionResponse) Reset()         { *m = GetRawTransactionResponse{} }
func (m *GetRawTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GetRawTransactionResponse) ProtoMessage()    {}
func (*GetRawTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{15}
}

func (m *GetRawTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawTransactionResponse.Unmarshal(m, b)
}
func (m *GetRawTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawTransactionResponse.Marshal(b, m, deterministic)
}
func (m *GetRawTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawTransactionResponse.Merge(m, src)
}
func (m *GetRawTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_GetRawTransactionResponse.Size(m)
}
func (m *GetRawTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawTransactionResponse proto.InternalMessageInfo

func (m *GetRawTransactionResponse) GetTransactionHex() string {
	if m != nil {
		return m.TransactionHex
	}
	return ""
}

func (m *GetRawTransactionResponse) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *GetRawTransactionResponse) GetBlockHeight() uint32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *GetRawTransactionResponse) GetTxIndex() uint32 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

type LoadCacheRequest struct {
	StartHeight          uint32   `protobuf:"varint,1,opt,name=startHeight,proto3" json:"startHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadCacheRequest) Reset()         { *m = LoadCacheRequest{} }
func (m *LoadCacheRequest) String() string { return proto.CompactTextString(m) }
func (*LoadCacheRequest) ProtoMessage()    {}
func (*LoadCacheRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{16}
}

func (m *LoadCacheRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadCacheRequest.Unmarshal(m, b)
}
func (m *LoadCacheRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadCacheRequest.Marshal(b, m, deterministic)
}
func (m *LoadCacheRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadCacheRequest.Merge(m, src)
}
func (m *LoadCacheRequest) XXX_Size() int {
	return xxx_messageInfo_LoadCacheRequest.Size(m)
}
func (m *LoadCacheRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadCacheRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadCacheRequest proto.InternalMessageInfo

func (m *LoadCacheRequest) GetStartHeight() uint32 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

type LoadCacheResponse struct {
	Loaded               bool     `protobuf:"varint,1,opt,name=loaded,proto3" json:"loaded,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadCacheResponse) Reset()         { *m = LoadCacheResponse{} }
func (m *LoadCacheResponse) String() string { return proto.CompactTextString(m) }
func (*LoadCacheResponse) ProtoMessage()    {}
func (*LoadCacheResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_208df3a258496856, []int{17}
}

func (m *LoadCacheResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadCacheResponse.Unmarshal(m, b)
}
func (m *LoadCacheResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadCacheResponse.Marshal(b, m, deterministic)
}
func (m *LoadCacheResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadCacheResponse.Merge(m, src)
}
func (m *LoadCacheResponse) XXX_Size() int {
	return xxx_messageInfo_LoadCacheResponse.Size(m)
}
func (m *LoadCacheResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadCacheResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoadCacheResponse proto.InternalMessageInfo

func (m *LoadCacheResponse) GetLoaded() bool {
	if m != nil {
		return m.Loaded
	}
	return false
}

func init() {
	proto.RegisterType((*GetChainInfoResponse)(nil), "lightwalletrpc.GetChainInfoResponse")
	proto.RegisterType((*GetBlockHeaderRequest)(nil), "lightwalletrpc.GetBlockHeaderRequest")
	proto.RegisterType((*FilterBlockResponse)(nil), "lightwalletrpc.FilterBlockResponse")
	proto.RegisterType((*BlockFilter)(nil), "lightwalletrpc.BlockFilter")
	proto.RegisterType((*DumpPrivKeyRequest)(nil), "lightwalletrpc.DumpPrivKeyRequest")
	proto.RegisterType((*Utxo)(nil), "lightwalletrpc.Utxo")
	proto.RegisterType((*ListUtxoResult)(nil), "lightwalletrpc.ListUtxoResult")
	proto.RegisterType((*GetLastAddressRequest)(nil), "lightwalletrpc.GetLastAddressRequest")
	proto.RegisterType((*GetLastAddressResponse)(nil), "lightwalletrpc.GetLastAddressResponse")
	proto.RegisterType((*ListUtxosRequest)(nil), "lightwalletrpc.ListUtxosRequest")
	proto.RegisterType((*GenerateRequest)(nil), "lightwalletrpc.GenerateRequest")
	proto.RegisterType((*GenerateResponse)(nil), "lightwalletrpc.GenerateResponse")
	proto.RegisterType((*GetBlockResponse)(nil), "lightwalletrpc.GetBlockResponse")
	proto.RegisterType((*GetConfirmedBalanceRequest)(nil), "lightwalletrpc.GetConfirmedBalanceRequest")
	proto.RegisterType((*GetConfirmedBalanceResponse)(nil), "lightwalletrpc.GetConfirmedBalanceResponse")
	proto.RegisterType((*GetRawTransactionResponse)(nil), "lightwalletrpc.GetRawTransactionResponse")
	proto.RegisterType((*LoadCacheRequest)(nil), "lightwalletrpc.LoadCacheRequest")
	proto.RegisterType((*LoadCacheResponse)(nil), "lightwalletrpc.LoadCacheResponse")
}

func init() { proto.RegisterFile("LightWalletService.proto", fileDescriptor_208df3a258496856) }

var fileDescriptor_208df3a258496856 = []byte{
	// 960 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xeb, 0x6e, 0x1b, 0x45,
	0x14, 0x96, 0x6b, 0x3b, 0xb1, 0x8f, 0x9d, 0x90, 0x4e, 0xdd, 0x68, 0xbb, 0x8d, 0xc0, 0x0c, 0xa5,
	0x0a, 0xad, 0x14, 0x50, 0x0a, 0x12, 0x08, 0xfe, 0xb4, 0x4e, 0xe2, 0x44, 0x71, 0x94, 0x68, 0x13,
	0x2e, 0x12, 0x3f, 0xd0, 0x78, 0x77, 0x52, 0xaf, 0xf0, 0xce, 0x98, 0x9d, 0x59, 0xd7, 0x7e, 0x09,
	0xde, 0x80, 0x67, 0xe3, 0x55, 0xd0, 0xce, 0xcc, 0xde, 0x37, 0x06, 0xfe, 0xed, 0xb9, 0xce, 0xb9,
	0x7e, 0x67, 0xc1, 0x9a, 0xf8, 0xef, 0x67, 0xf2, 0x67, 0x32, 0x9f, 0x53, 0x79, 0x4b, 0xc3, 0xa5,
	0xef, 0xd2, 0xa3, 0x45, 0xc8, 0x25, 0x47, 0xbb, 0xf3, 0x58, 0xf2, 0x41, 0x49, 0xc2, 0x85, 0x6b,
	0xf7, 0x47, 0x3c, 0x08, 0x38, 0xd3, 0x52, 0x7c, 0x07, 0x83, 0x31, 0x95, 0xa3, 0x19, 0xf1, 0xd9,
	0x05, 0xbb, 0xe7, 0x0e, 0x15, 0x0b, 0xce, 0x04, 0x45, 0x2f, 0x60, 0x67, 0x4a, 0x85, 0x7c, 0x37,
	0xe7, 0xee, 0xef, 0xe7, 0x44, 0xcc, 0xac, 0xc6, 0xb0, 0x71, 0xd8, 0x75, 0x8a, 0x4c, 0xb4, 0x0f,
	0x5b, 0x33, 0x1a, 0xbb, 0xb7, 0x1e, 0x0d, 0x1b, 0x87, 0x6d, 0xc7, 0x50, 0xf8, 0x14, 0x9e, 0x8e,
	0xa9, 0xd1, 0xa3, 0xc4, 0xa3, 0xa1, 0x43, 0xff, 0x88, 0xa8, 0x90, 0x08, 0x41, 0x6b, 0x96, 0x79,
	0x53, 0xdf, 0xc8, 0x82, 0xed, 0x25, 0x0d, 0xa7, 0x5c, 0x50, 0xe5, 0xa5, 0xe3, 0x24, 0x24, 0xfe,
	0x0e, 0x9e, 0x9c, 0xf9, 0x73, 0x49, 0x43, 0xe5, 0x29, 0x8d, 0x0d, 0x43, 0x5f, 0x86, 0x84, 0x09,
	0xe2, 0x4a, 0x9f, 0x33, 0x61, 0x35, 0x86, 0xcd, 0xc3, 0xae, 0x53, 0xe0, 0xe1, 0x2b, 0xe8, 0x29,
	0x23, 0x6d, 0x8f, 0xfa, 0xd0, 0x60, 0xea, 0xd1, 0x1d, 0xa7, 0xc1, 0x62, 0x2a, 0x50, 0x6f, 0xb5,
	0x9c, 0x46, 0x10, 0x53, 0x0b, 0xab, 0xa9, 0x65, 0x0b, 0x34, 0x80, 0xf6, 0x74, 0x2d, 0xa9, 0xb0,
	0x5a, 0x2a, 0x44, 0x4d, 0xe0, 0x6f, 0x01, 0x9d, 0x44, 0xc1, 0xe2, 0x26, 0xf4, 0x97, 0x97, 0x74,
	0x9d, 0x64, 0x83, 0xa1, 0x2f, 0xdc, 0xd0, 0x5f, 0xc8, 0x9b, 0x68, 0x7a, 0x49, 0xd7, 0x26, 0xab,
	0x02, 0x0f, 0xff, 0xd9, 0x80, 0xd6, 0x8f, 0x72, 0xc5, 0xe3, 0xd4, 0x97, 0x3c, 0x92, 0x26, 0x0a,
	0xf5, 0x1d, 0xf3, 0xe4, 0xca, 0xf7, 0x54, 0x2c, 0x5d, 0x47, 0x7d, 0xc7, 0x01, 0x2c, 0xc9, 0x3c,
	0xa2, 0x2a, 0xa4, 0xa6, 0xa3, 0x89, 0xca, 0x53, 0xad, 0xea, 0x53, 0x71, 0xcf, 0x5c, 0xce, 0xee,
	0xfd, 0x30, 0x20, 0xba, 0x30, 0x6d, 0xe5, 0xa1, 0xc8, 0xc4, 0x3f, 0xc0, 0xee, 0xc4, 0x17, 0x32,
	0x8e, 0xc9, 0xa1, 0x22, 0x9a, 0x4b, 0xf4, 0x0a, 0xda, 0x91, 0x5c, 0x71, 0x5d, 0xc8, 0xde, 0xf1,
	0xe0, 0xa8, 0x38, 0x31, 0x47, 0x4a, 0x55, 0xab, 0xe0, 0x37, 0xaa, 0xb3, 0x13, 0x22, 0xe4, 0x5b,
	0xcf, 0x0b, 0xa9, 0x10, 0x49, 0x2d, 0x6c, 0xe8, 0xf8, 0x62, 0x34, 0x23, 0xec, 0x3d, 0x55, 0x29,
	0x76, 0x9c, 0x94, 0xc6, 0xc7, 0xb0, 0x5f, 0x36, 0x32, 0xad, 0xb4, 0x60, 0x9b, 0x68, 0x96, 0x29,
	0x5e, 0x42, 0x62, 0x0f, 0xf6, 0x92, 0x30, 0xd3, 0x37, 0x2c, 0xd8, 0x0e, 0x7c, 0x36, 0xe2, 0xec,
	0x5e, 0x69, 0xb7, 0x9d, 0x84, 0x54, 0x12, 0xb2, 0x52, 0x92, 0x47, 0x46, 0xa2, 0x49, 0x74, 0x00,
	0x5d, 0xe3, 0x92, 0x0a, 0xab, 0xa9, 0x26, 0x25, 0x63, 0xe0, 0x2f, 0xe1, 0xa3, 0x31, 0x65, 0x34,
	0x24, 0x92, 0x26, 0x8f, 0x1c, 0x40, 0x97, 0x45, 0x81, 0x1a, 0x1e, 0x61, 0x9a, 0x95, 0x31, 0xf0,
	0x57, 0xb0, 0x97, 0x19, 0x98, 0x24, 0x0e, 0xa0, 0x3b, 0xcd, 0xed, 0x89, 0x7a, 0x22, 0x65, 0xe0,
	0x5f, 0x62, 0x0b, 0x59, 0x9c, 0xe0, 0x21, 0xf4, 0xa6, 0xd9, 0x72, 0x98, 0xd4, 0xf3, 0xac, 0xca,
	0x8c, 0x3f, 0xaa, 0x99, 0xf1, 0x63, 0xb0, 0xe3, 0xdd, 0xd5, 0xdd, 0xa5, 0xde, 0x3b, 0x32, 0x27,
	0xcc, 0x4d, 0xf3, 0x18, 0x40, 0x3b, 0x6e, 0xbc, 0x30, 0xa5, 0xd2, 0x04, 0xfe, 0x06, 0x9e, 0xd7,
	0xda, 0x98, 0xc0, 0xf6, 0x61, 0x8b, 0x04, 0x3c, 0x62, 0x7a, 0x4c, 0x9b, 0x8e, 0xa1, 0xf0, 0x5f,
	0x0d, 0x78, 0x36, 0xa6, 0xd2, 0x21, 0x1f, 0xee, 0xb2, 0x08, 0x52, 0xab, 0x97, 0xb0, 0x9b, 0x0b,
	0xec, 0x9c, 0xae, 0x4c, 0x46, 0x25, 0x6e, 0xb1, 0x50, 0x7a, 0xe6, 0x33, 0x46, 0xae, 0x28, 0x0a,
	0x51, 0xf4, 0x46, 0xe6, 0x59, 0x71, 0x97, 0xe5, 0xea, 0x82, 0x79, 0x74, 0xa5, 0xe6, 0x7f, 0xc7,
	0x49, 0x48, 0xfc, 0x35, 0xec, 0x4d, 0x38, 0xf1, 0x46, 0xc4, 0x9d, 0xa5, 0x05, 0x18, 0x42, 0x4f,
	0x48, 0x12, 0x4a, 0xe3, 0x4f, 0xb7, 0x32, 0xcf, 0xc2, 0xaf, 0xe1, 0x71, 0xce, 0x2a, 0x2b, 0xc1,
	0x9c, 0x13, 0x8f, 0x7a, 0x66, 0x8c, 0x0d, 0x75, 0xfc, 0x37, 0x00, 0xaa, 0x82, 0x2c, 0xba, 0x84,
	0x7e, 0x1e, 0x40, 0xd1, 0xd3, 0xf2, 0xf6, 0x9c, 0x06, 0x0b, 0xb9, 0xb6, 0x5f, 0x94, 0xd9, 0xb5,
	0xa8, 0xfb, 0x56, 0x39, 0xcb, 0xe1, 0x6b, 0xd9, 0x4a, 0x07, 0x6e, 0x3f, 0x2b, 0xf3, 0x33, 0x93,
	0x31, 0x74, 0x12, 0x17, 0xe8, 0x61, 0x35, 0x7b, 0x58, 0x13, 0x4f, 0x71, 0x46, 0xc7, 0xb0, 0x5b,
	0xc4, 0xf0, 0x4d, 0xee, 0xec, 0x6a, 0xa0, 0xab, 0x53, 0xe6, 0x72, 0x8f, 0x7a, 0xe8, 0xba, 0x7c,
	0x0c, 0x7e, 0xd2, 0xf0, 0xbe, 0xc9, 0xdf, 0xf3, 0x7a, 0x91, 0x8e, 0xe3, 0x46, 0x45, 0x96, 0xbb,
	0x0c, 0x9b, 0x3c, 0x7d, 0x56, 0x16, 0xd5, 0x5d, 0x94, 0xf3, 0x2c, 0x57, 0x73, 0x30, 0xfe, 0x77,
	0x6c, 0xc6, 0xee, 0x7b, 0x55, 0xfe, 0xbb, 0xd5, 0x75, 0x24, 0x91, 0x55, 0x56, 0xbc, 0x8e, 0xe4,
	0x82, 0xfb, 0x4c, 0xda, 0x95, 0x21, 0xd1, 0x06, 0x77, 0xf0, 0xb8, 0xb2, 0x64, 0x68, 0x50, 0xd5,
	0xbd, 0x38, 0xb1, 0xbf, 0xa8, 0xe9, 0xdf, 0x03, 0xdb, 0xf9, 0x9b, 0x4a, 0x2e, 0x87, 0xbe, 0xe8,
	0xf3, 0x1a, 0xe3, 0x2a, 0xa4, 0xdb, 0x2f, 0xff, 0x4d, 0xcd, 0x3c, 0x70, 0x05, 0xdd, 0x14, 0xaa,
	0x51, 0x65, 0xb0, 0xca, 0x28, 0x6e, 0x7f, 0xfc, 0x90, 0x86, 0x39, 0x47, 0x57, 0xd0, 0xcb, 0xdd,
	0x5a, 0x84, 0xcb, 0xea, 0xd5, 0x43, 0xbc, 0x71, 0xfc, 0xce, 0x00, 0xdd, 0x52, 0xe6, 0x95, 0xaa,
	0xba, 0xc1, 0xc2, 0xae, 0xad, 0x38, 0x62, 0xf0, 0xa4, 0x06, 0x39, 0xd1, 0xab, 0xba, 0xc5, 0xae,
	0x87, 0x64, 0xfb, 0xf5, 0x7f, 0xd2, 0x4d, 0xab, 0xda, 0x49, 0x2e, 0x0d, 0xfa, 0xa4, 0x6a, 0x58,
	0x38, 0x5a, 0x75, 0xeb, 0x5c, 0x3a, 0x52, 0xbf, 0xc2, 0x20, 0xc6, 0xba, 0x5b, 0xea, 0x72, 0xe6,
	0x4d, 0xc8, 0x9a, 0x86, 0x0a, 0xf6, 0x6a, 0xfa, 0x55, 0xc2, 0x51, 0xfb, 0xd3, 0x0d, 0x1a, 0xc6,
	0xf9, 0x09, 0x0c, 0xce, 0x42, 0x4a, 0x2b, 0xce, 0x1f, 0x00, 0xc3, 0x7a, 0xf6, 0x74, 0x4b, 0xfd,
	0x92, 0xbe, 0xf9, 0x27, 0x00, 0x00, 0xff, 0xff, 0x78, 0x92, 0xd2, 0xdc, 0xcc, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LightWalletServiceClient is the client API for LightWalletService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LightWalletServiceClient interface {
	//*
	//GetBestBlock returns the highest block known to lightwallet.
	GetChainInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetChainInfoResponse, error)
	GetBlockHash(ctx context.Context, in *Height, opts ...grpc.CallOption) (*BlockHash, error)
	GetBlock(ctx context.Context, in *BlockHash, opts ...grpc.CallOption) (*GetBlockResponse, error)
	GetBlockHeader(ctx context.Context, in *BlockHash, opts ...grpc.CallOption) (*HexEncoded, error)
	GetBlockHeaderVerbose(ctx context.Context, in *BlockHash, opts ...grpc.CallOption) (*BlockHeader, error)
	GetFilterBlock(ctx context.Context, in *BlockHash, opts ...grpc.CallOption) (*FilterBlockResponse, error)
	GetBlockFilter(ctx context.Context, in *BlockHash, opts ...grpc.CallOption) (*BlockFilter, error)
	GetTxOut(ctx context.Context, in *Outpoint, opts ...grpc.CallOption) (*TxOut, error)
	GetRawTransaction(ctx context.Context, in *TxID, opts ...grpc.CallOption) (*GetRawTransactionResponse, error)
	GetLastAddress(ctx context.Context, in *GetLastAddressRequest, opts ...grpc.CallOption) (*GetLastAddressResponse, error)
	ListUtxos(ctx context.Context, in *ListUtxosRequest, opts ...grpc.CallOption) (*ListUtxoResult, error)
	DumpPrivKey(ctx context.Context, in *DumpPrivKeyRequest, opts ...grpc.CallOption) (*HexEncoded, error)
	SendRawTransaction(ctx context.Context, in *HexEncoded, opts ...grpc.CallOption) (*TxID, error)
	GetConfirmedBalance(ctx context.Context, in *GetConfirmedBalanceRequest, opts ...grpc.CallOption) (*GetConfirmedBalanceResponse, error)
	Generate(ctx context.Context, in *GenerateRequest, opts ...grpc.CallOption) (*GenerateResponse, error)
	LoadSecondLayerCache(ctx context.Context, in *LoadCacheRequest, opts ...grpc.CallOption) (*LoadCacheResponse, error)
	FreeSecondLayerCache(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type lightWalletServiceClient struct {
	cc *grpc.ClientConn
}

func NewLightWalletServiceClient(cc *grpc.ClientConn) LightWalletServiceClient {
	return &lightWalletServiceClient{cc}
}

func (c *lightWalletServiceClient) GetChainInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetChainInfoResponse, error) {
	out := new(GetChainInfoResponse)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/GetChainInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) GetBlockHash(ctx context.Context, in *Height, opts ...grpc.CallOption) (*BlockHash, error) {
	out := new(BlockHash)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/GetBlockHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) GetBlock(ctx context.Context, in *BlockHash, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) GetBlockHeader(ctx context.Context, in *BlockHash, opts ...grpc.CallOption) (*HexEncoded, error) {
	out := new(HexEncoded)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/GetBlockHeader", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) GetBlockHeaderVerbose(ctx context.Context, in *BlockHash, opts ...grpc.CallOption) (*BlockHeader, error) {
	out := new(BlockHeader)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/GetBlockHeaderVerbose", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) GetFilterBlock(ctx context.Context, in *BlockHash, opts ...grpc.CallOption) (*FilterBlockResponse, error) {
	out := new(FilterBlockResponse)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/GetFilterBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) GetBlockFilter(ctx context.Context, in *BlockHash, opts ...grpc.CallOption) (*BlockFilter, error) {
	out := new(BlockFilter)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/GetBlockFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) GetTxOut(ctx context.Context, in *Outpoint, opts ...grpc.CallOption) (*TxOut, error) {
	out := new(TxOut)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/GetTxOut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) GetRawTransaction(ctx context.Context, in *TxID, opts ...grpc.CallOption) (*GetRawTransactionResponse, error) {
	out := new(GetRawTransactionResponse)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/GetRawTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) GetLastAddress(ctx context.Context, in *GetLastAddressRequest, opts ...grpc.CallOption) (*GetLastAddressResponse, error) {
	out := new(GetLastAddressResponse)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/GetLastAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) ListUtxos(ctx context.Context, in *ListUtxosRequest, opts ...grpc.CallOption) (*ListUtxoResult, error) {
	out := new(ListUtxoResult)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/ListUtxos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) DumpPrivKey(ctx context.Context, in *DumpPrivKeyRequest, opts ...grpc.CallOption) (*HexEncoded, error) {
	out := new(HexEncoded)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/DumpPrivKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) SendRawTransaction(ctx context.Context, in *HexEncoded, opts ...grpc.CallOption) (*TxID, error) {
	out := new(TxID)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/SendRawTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) GetConfirmedBalance(ctx context.Context, in *GetConfirmedBalanceRequest, opts ...grpc.CallOption) (*GetConfirmedBalanceResponse, error) {
	out := new(GetConfirmedBalanceResponse)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/GetConfirmedBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) Generate(ctx context.Context, in *GenerateRequest, opts ...grpc.CallOption) (*GenerateResponse, error) {
	out := new(GenerateResponse)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/Generate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) LoadSecondLayerCache(ctx context.Context, in *LoadCacheRequest, opts ...grpc.CallOption) (*LoadCacheResponse, error) {
	out := new(LoadCacheResponse)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/LoadSecondLayerCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightWalletServiceClient) FreeSecondLayerCache(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/lightwalletrpc.LightWalletService/FreeSecondLayerCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LightWalletServiceServer is the server API for LightWalletService service.
type LightWalletServiceServer interface {
	//*
	//GetBestBlock returns the highest block known to lightwallet.
	GetChainInfo(context.Context, *Empty) (*GetChainInfoResponse, error)
	GetBlockHash(context.Context, *Height) (*BlockHash, error)
	GetBlock(context.Context, *BlockHash) (*GetBlockResponse, error)
	GetBlockHeader(context.Context, *BlockHash) (*HexEncoded, error)
	GetBlockHeaderVerbose(context.Context, *BlockHash) (*BlockHeader, error)
	GetFilterBlock(context.Context, *BlockHash) (*FilterBlockResponse, error)
	GetBlockFilter(context.Context, *BlockHash) (*BlockFilter, error)
	GetTxOut(context.Context, *Outpoint) (*TxOut, error)
	GetRawTransaction(context.Context, *TxID) (*GetRawTransactionResponse, error)
	GetLastAddress(context.Context, *GetLastAddressRequest) (*GetLastAddressResponse, error)
	ListUtxos(context.Context, *ListUtxosRequest) (*ListUtxoResult, error)
	DumpPrivKey(context.Context, *DumpPrivKeyRequest) (*HexEncoded, error)
	SendRawTransaction(context.Context, *HexEncoded) (*TxID, error)
	GetConfirmedBalance(context.Context, *GetConfirmedBalanceRequest) (*GetConfirmedBalanceResponse, error)
	Generate(context.Context, *GenerateRequest) (*GenerateResponse, error)
	LoadSecondLayerCache(context.Context, *LoadCacheRequest) (*LoadCacheResponse, error)
	FreeSecondLayerCache(context.Context, *Empty) (*Empty, error)
}

// UnimplementedLightWalletServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLightWalletServiceServer struct {
}

func (*UnimplementedLightWalletServiceServer) GetChainInfo(ctx context.Context, req *Empty) (*GetChainInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChainInfo not implemented")
}
func (*UnimplementedLightWalletServiceServer) GetBlockHash(ctx context.Context, req *Height) (*BlockHash, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockHash not implemented")
}
func (*UnimplementedLightWalletServiceServer) GetBlock(ctx context.Context, req *BlockHash) (*GetBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlock not implemented")
}
func (*UnimplementedLightWalletServiceServer) GetBlockHeader(ctx context.Context, req *BlockHash) (*HexEncoded, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockHeader not implemented")
}
func (*UnimplementedLightWalletServiceServer) GetBlockHeaderVerbose(ctx context.Context, req *BlockHash) (*BlockHeader, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockHeaderVerbose not implemented")
}
func (*UnimplementedLightWalletServiceServer) GetFilterBlock(ctx context.Context, req *BlockHash) (*FilterBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFilterBlock not implemented")
}
func (*UnimplementedLightWalletServiceServer) GetBlockFilter(ctx context.Context, req *BlockHash) (*BlockFilter, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockFilter not implemented")
}
func (*UnimplementedLightWalletServiceServer) GetTxOut(ctx context.Context, req *Outpoint) (*TxOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTxOut not implemented")
}
func (*UnimplementedLightWalletServiceServer) GetRawTransaction(ctx context.Context, req *TxID) (*GetRawTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRawTransaction not implemented")
}
func (*UnimplementedLightWalletServiceServer) GetLastAddress(ctx context.Context, req *GetLastAddressRequest) (*GetLastAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastAddress not implemented")
}
func (*UnimplementedLightWalletServiceServer) ListUtxos(ctx context.Context, req *ListUtxosRequest) (*ListUtxoResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUtxos not implemented")
}
func (*UnimplementedLightWalletServiceServer) DumpPrivKey(ctx context.Context, req *DumpPrivKeyRequest) (*HexEncoded, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DumpPrivKey not implemented")
}
func (*UnimplementedLightWalletServiceServer) SendRawTransaction(ctx context.Context, req *HexEncoded) (*TxID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendRawTransaction not implemented")
}
func (*UnimplementedLightWalletServiceServer) GetConfirmedBalance(ctx context.Context, req *GetConfirmedBalanceRequest) (*GetConfirmedBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfirmedBalance not implemented")
}
func (*UnimplementedLightWalletServiceServer) Generate(ctx context.Context, req *GenerateRequest) (*GenerateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Generate not implemented")
}
func (*UnimplementedLightWalletServiceServer) LoadSecondLayerCache(ctx context.Context, req *LoadCacheRequest) (*LoadCacheResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadSecondLayerCache not implemented")
}
func (*UnimplementedLightWalletServiceServer) FreeSecondLayerCache(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FreeSecondLayerCache not implemented")
}

func RegisterLightWalletServiceServer(s *grpc.Server, srv LightWalletServiceServer) {
	s.RegisterService(&_LightWalletService_serviceDesc, srv)
}

func _LightWalletService_GetChainInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).GetChainInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/GetChainInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).GetChainInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_GetBlockHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Height)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).GetBlockHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/GetBlockHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).GetBlockHash(ctx, req.(*Height))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockHash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).GetBlock(ctx, req.(*BlockHash))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_GetBlockHeader_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockHash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).GetBlockHeader(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/GetBlockHeader",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).GetBlockHeader(ctx, req.(*BlockHash))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_GetBlockHeaderVerbose_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockHash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).GetBlockHeaderVerbose(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/GetBlockHeaderVerbose",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).GetBlockHeaderVerbose(ctx, req.(*BlockHash))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_GetFilterBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockHash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).GetFilterBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/GetFilterBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).GetFilterBlock(ctx, req.(*BlockHash))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_GetBlockFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockHash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).GetBlockFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/GetBlockFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).GetBlockFilter(ctx, req.(*BlockHash))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_GetTxOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Outpoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).GetTxOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/GetTxOut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).GetTxOut(ctx, req.(*Outpoint))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_GetRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).GetRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/GetRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).GetRawTransaction(ctx, req.(*TxID))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_GetLastAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLastAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).GetLastAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/GetLastAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).GetLastAddress(ctx, req.(*GetLastAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_ListUtxos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUtxosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).ListUtxos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/ListUtxos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).ListUtxos(ctx, req.(*ListUtxosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_DumpPrivKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DumpPrivKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).DumpPrivKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/DumpPrivKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).DumpPrivKey(ctx, req.(*DumpPrivKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_SendRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HexEncoded)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).SendRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/SendRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).SendRawTransaction(ctx, req.(*HexEncoded))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_GetConfirmedBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfirmedBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).GetConfirmedBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/GetConfirmedBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).GetConfirmedBalance(ctx, req.(*GetConfirmedBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_Generate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).Generate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/Generate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).Generate(ctx, req.(*GenerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_LoadSecondLayerCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadCacheRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).LoadSecondLayerCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/LoadSecondLayerCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).LoadSecondLayerCache(ctx, req.(*LoadCacheRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightWalletService_FreeSecondLayerCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightWalletServiceServer).FreeSecondLayerCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightwalletrpc.LightWalletService/FreeSecondLayerCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightWalletServiceServer).FreeSecondLayerCache(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _LightWalletService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lightwalletrpc.LightWalletService",
	HandlerType: (*LightWalletServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetChainInfo",
			Handler:    _LightWalletService_GetChainInfo_Handler,
		},
		{
			MethodName: "GetBlockHash",
			Handler:    _LightWalletService_GetBlockHash_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _LightWalletService_GetBlock_Handler,
		},
		{
			MethodName: "GetBlockHeader",
			Handler:    _LightWalletService_GetBlockHeader_Handler,
		},
		{
			MethodName: "GetBlockHeaderVerbose",
			Handler:    _LightWalletService_GetBlockHeaderVerbose_Handler,
		},
		{
			MethodName: "GetFilterBlock",
			Handler:    _LightWalletService_GetFilterBlock_Handler,
		},
		{
			MethodName: "GetBlockFilter",
			Handler:    _LightWalletService_GetBlockFilter_Handler,
		},
		{
			MethodName: "GetTxOut",
			Handler:    _LightWalletService_GetTxOut_Handler,
		},
		{
			MethodName: "GetRawTransaction",
			Handler:    _LightWalletService_GetRawTransaction_Handler,
		},
		{
			MethodName: "GetLastAddress",
			Handler:    _LightWalletService_GetLastAddress_Handler,
		},
		{
			MethodName: "ListUtxos",
			Handler:    _LightWalletService_ListUtxos_Handler,
		},
		{
			MethodName: "DumpPrivKey",
			Handler:    _LightWalletService_DumpPrivKey_Handler,
		},
		{
			MethodName: "SendRawTransaction",
			Handler:    _LightWalletService_SendRawTransaction_Handler,
		},
		{
			MethodName: "GetConfirmedBalance",
			Handler:    _LightWalletService_GetConfirmedBalance_Handler,
		},
		{
			MethodName: "Generate",
			Handler:    _LightWalletService_Generate_Handler,
		},
		{
			MethodName: "LoadSecondLayerCache",
			Handler:    _LightWalletService_LoadSecondLayerCache_Handler,
		},
		{
			MethodName: "FreeSecondLayerCache",
			Handler:    _LightWalletService_FreeSecondLayerCache_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "LightWalletService.proto",
}
